(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{376:function(t,i,e){"use strict";e.r(i);var v=e(43),n=Object(v.a)({},(function(){var t=this,i=t.$createElement,e=t._self._c||i;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h4",{attrs:{id:"activity-window-view三者的差别-fragment的特点-360"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#activity-window-view三者的差别-fragment的特点-360"}},[t._v("#")]),t._v(" Activity Window View三者的差别,fragment的特点-360")]),t._v(" "),e("p",[t._v("Activity像一个工匠（控制单元），Window像窗户（承载模型），View像窗花（显示视图）\nLayoutInflater像剪刀，Xml配置像窗花图纸。")]),t._v(" "),e("ol",[e("li",[t._v("在Activity中调用attach，创建了一个Window")]),t._v(" "),e("li",[t._v("创建的window是其子类PhoneWindow，在attach中创建PhoneWindow")]),t._v(" "),e("li",[t._v("在Activity中调用setContentView(R.layout.xxx)")]),t._v(" "),e("li",[t._v("其中实际上是调用的getWindow().setContentView()")]),t._v(" "),e("li",[t._v("调用PhoneWindow中的setContentView方法")]),t._v(" "),e("li",[t._v("创建ParentView：作为ViewGroup的子类，实际是创建的DecorView(作为FramLayout的子类）")]),t._v(" "),e("li",[t._v("将指定的R.layout.xxx进行填充，通过布局填充器进行填充【其中的parent指的就是DecorView】")]),t._v(" "),e("li",[t._v("调用到ViewGroup")]),t._v(" "),e("li",[t._v("调用ViewGroup的removeAllView()，先将所有的view移除掉")]),t._v(" "),e("li",[t._v("添加新的view：addView()")])]),t._v(" "),e("p",[t._v("Fragment 特点")]),t._v(" "),e("ul",[e("li",[t._v("Fragment可以作为Activity界面的一部分组成出现；")]),t._v(" "),e("li",[t._v("可以在一个Activity中同时出现多个Fragment，并且一个Fragment也可以在多个Activity中使用；")]),t._v(" "),e("li",[t._v("在Activity运行过程中，可以添加、移除或者替换Fragment；")]),t._v(" "),e("li",[t._v("Fragment可以响应自己的输入事件，并且有自己的生命周期，它们的生命周期会受宿主Activity的生命周期影响。")])])])}),[],!1,null,null,null);i.default=n.exports}}]);